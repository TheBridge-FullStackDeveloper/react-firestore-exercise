import { initializeApp } from "firebase/app";

import {
  getDocs, //GET
  setDoc, //POST
  deleteDoc, //DELETE
  getFirestore,
  collection,
  doc,
  query, //Order by year
  orderBy, //Order by year
} from "firebase/firestore";

const firebaseConfig = {
  apiKey: "AIzaSyDowcY9Vc5CvJhJzhDhnB5-sRA4dBcjOS8",
  authDomain: "songs-736c0.firebaseapp.com",
  projectId: "songs-736c0",
  storageBucket: "songs-736c0.appspot.com",
  messagingSenderId: "1060622724434",
  appId: "1:1060622724434:web:cce60b99de860748855e8b",
};

const app = initializeApp(firebaseConfig);

const db = getFirestore(app);

const songRef = collection(db, "songs");

export const getSongsByDate = async () => {
  const q = query(songRef, orderBy("year"));
  const querySnapshot = await getDocs(q);
  return querySnapshot.docs.map((doc) => doc.data());
};

// data is coming from the form, as an object, I will add the id generated by Firestore:

export const setNewSong = async (data) => {
  try {
    const docRef = doc(songRef); //It first creates a docRef using the doc function
    await setDoc(docRef, { ...data, id: docRef.id }); //writes the prepared data object to the Firestore document referenced by docRef
    console.log("Document successfully written with ID: ", docRef.id);
  } catch (error) {
    console.error("Error writing document: ", error);
  }
};

//I will pass the id of the object "song":

export const deleteSong = async (documentId) => {
  try {
    console.log("This is the document id", documentId);
    await deleteDoc(doc(db, "songs", documentId));
    console.log("Song deleted successfully");
  } catch (error) {
    console.error("Error deleting song:", error);
  }
};
